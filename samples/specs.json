[
   {
      "name":"api1/versions/version-1/specs/spec1",
      "displayName":"API Spec 1",
      "specType":{
         "attribute":"system-spec-type",
         "enumValues":{
            "values":[
               {
                  "id":"openapi"
               }
            ]
         }
      },
      "contents":{
         "contents": "",
         "mimeType": "application/yaml"
      },
      "attributes":{
         "sample-attribute2":{
            "jsonValues":{
               "values":[
                  "{\"foo\":\"bar\"}"
               ]
            }
         }
      },
      "parsingMode":"RELAXED"
   }
]